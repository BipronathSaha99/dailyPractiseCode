'''Method Overriding in Python
Method overriding is a concept of object oriented programming that allows 
us to change the implementation of a function in the child class that is defined in 
the parent class. 
It is the ability of a child class to change the implementation of 
any method which is already provided by one of its parent class(ancestors).

Following conditions must be met for overriding a function:

1)Inheritance should be there. Function overriding cannot be done within a class. 
We need to derive a child class from a parent class.
2)The function that is redefined in the child class should have the same signature as in the parent class 
i.e. same number of parameters.'''

class Person:
    def __init__(self,name,age):
        self.name=name
        self.age=age
    def info(self):
        print(f"I\'m {self.name} and I\'m {self.age} years old")

class Player(Person):
    def __init__(self,name,age,game):
        super().__init__(name,age)
        self.game=game
    def pl_info(self):
        print(f"I\'m {self.name} . I\'m {self.age} years old. I\'m playing {self.game}")
    def ifo(self):
        print(f"I\'m {self.name} and I\'m {self.age} years old")

p1=Player("Bipronath",22,"Football")
p1.info()   # this info method called from child class . it overriddes .
p1.pl_info()
# p1.info()  # this info calles from parent class.

        
